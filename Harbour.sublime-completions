{
	"scope": "source.harbour - variable.other.harbour",
	"completions":
	[
		"Harbour",
/* A */
		{ "trigger": "aadd", 	"contents": "aadd(${1:aArray}, ${2:value})" },
		{ "trigger": "abs", 	"contents": "abs(${1:number})" },
		{ "trigger": "achoice", "contents": "achoice(${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight}, ${5:aItems})" },
		{ "trigger": "aclone", 	"contents": "aclone(${1:aArray})" },
		{ "trigger": "acopy", 	"contents": "acopy(${1:aSource}, ${2:aTarget})" },
		{ "trigger": "adel", 	"contents": "adel(${1:aArray}, ${2:nPos})" },
		{ "trigger": "adir", 	"contents": "adir(${1:cFileMask}, ${2:aName}, ${3:aSizes}, ${4:aDate}, ${5:aTime}, ${6:aAttr})" },
		{ "trigger": "aeval", 	"contents": "aeval(${1:aArray}, \\{|${2:elem}| ${3:elem }\\}, ${4:nStart}, ${5:nCount})" },
		{ "trigger": "afields",	"contents": "afields(${1:aNames}, ${2:aTypes}, ${3:aLens}, ${4:aDecs})" },
		{ "trigger": "afill", 	"contents": "afill(${1:aArray}, ${2:value})" },
		{ "trigger": "ains", 	"contents": "ains(${1:aArray}, ${2:nPos})" },
		{ "trigger": "alert", 	"contents": "alert(${1:message})" },
		{ "trigger": "alias", 	"contents": "alias(${1:nWorkArea})" },
		{ "trigger": "alltrim", "contents": "alltrim(${1:cString})" },
		{ "trigger": "altd",    "contents": "altd(${1:[nAction]})" },
		{ "trigger": "array", 	"contents": "array(${1:number})" },
		{ "trigger": "asc", 	"contents": "asc(${1:cCharacter})" },
		{ "trigger": "ascpos",	"contents": "ascpos(${1:cCharacter},${2:[nPos]})" },
		{ "trigger": "ascan", 	"contents": "ascan(${1:aArray}, ${2:expSearch})" },
		{ "trigger": "asin", 	"contents": "asin(${1:nRadians})" },
		{ "trigger": "asize", 	"contents": "asize(${1:aArray}, ${2:nLen})" },
		{ "trigger": "asizealloc", "contents": "asizealloc(${1:aArray}, ${2:nCount})" },
		{ "trigger": "asort", 	"contents": "asort(${1:aArray}, ${2:nStart}, ${3:nCount}, \\{|${4:x},${5:y}| ${4:x} < ${5:y}\\})" },
		{ "trigger": "at", 	    "contents": "at(${1:cSearch}, ${2:cString})" },
		{ "trigger": "atail", 	"contents": "atail(${1:aArray})" },
		{ "trigger": "atan", 	"contents": "atan(${1:nRadians})" },
		{ "trigger": "atn2", 	"contents": "atn2(${1:nSine},${2:nCosine})" },
		{ "trigger": "atnum", 	"contents": "atnum(${1:cSearch},${2:cString},${3:[nCount]},${4:[nSkipChars]})" },
		{ "trigger": "addascii","contents": "addascii(${1:cString},${2:nValue},${3:[nPos]})" },
/* B */
		{ "trigger": "bin2i",   "contents": "bin2i(${1:cBuffer})" },
		{ "trigger": "bin2l",   "contents": "bin2l(${1:cBuffer})" },
		{ "trigger": "bin2u",   "contents": "bin2u(${1:cBuffer})" },
		{ "trigger": "bin2w",   "contents": "bin2w(${1:cBuffer})" },
		{ "trigger": "bof",     "contents": "bof()" },
		{ "trigger": "break",   "contents": "break(${1:xExp})" },
		{ "trigger": "browse",  "contents": "browse(${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight})" },
/* C */
		{ "trigger": "cdow",    "contents": "cdow(${1:dDate})" },
		{ "trigger": "chr", 	"contents": "chr(${1:ascii})" },
		{ "trigger": "clipinit","contents": "clipinit()" },
		{ "trigger": "cmonth",  "contents": "cmonth(${1:dDate})" },
		{ "trigger": "col",     "contents": "col()" },
		{ "trigger": "copy", 	"contents": "copy(${1:source}, ${2:dest})" },
		{ "trigger": "cos", 	"contents": "cos(${1:arg})" },
		{ "trigger": "count", 	"contents": "count()" },
		{ "trigger": "ctod",    "contents": "ctod(${1:cDateString})" },
		{ "trigger": "curdir",  "contents": "curdir(${1:cDrive})" },
/* D */
		{ "trigger": "date", 	"contents": "date()" },
		{ "trigger": "day",     "contents": "day(${1:cDate})" },
		{ "trigger": "days",    "contents": "days(${1:nSecs})" },
		{ "trigger": "dbappend","contents": "dbappend(${1:lLock})" },
		{ "trigger": "dbclearfilter", "contents": "dbclearfilter()" },
		{ "trigger": "dbcloseall",    "contents": "dbcloseall()" },
		{ "trigger": "dbclosearea",   "contents": "dbclosearea()" },
		{ "trigger": "dbcommit","contents": "dbcommit()" },
		{ "trigger": "dbcreate","contents": "dbcreate( ${1:cDbf}, ${2:aStruct}, ${3:[cDriver]}, ${4:[lOpen]}, ${5:[cAlias]} )" },
		{ "trigger": "dbdelete","contents": "dbdelete()" },
		{ "trigger": "dbedit",  "contents": "dbedit( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:[aColumns]}, ${6:[xUserFunc]}, ${7:[xColumnSayPictures]}, ${8:[xColumnHeaders]}, ${9:[xHeadingSeparators]}, ${10:[xColumnSeparators]}, ${11:[xFootingSeparators]}, ${12:[xColumnFootings]} )" },
		{ "trigger": "dbeval",  "contents": "dbeval( ${1:bBlock}, ${2:[bFor]}, ${3:[bWhile]}, ${4:[nNext]}, ${5:[nRecord]}, ${6:[lRest]} )" },
		{ "trigger": "dbf",     "contents": "dbf()" },
		{ "trigger": "dbfilter","contents": "dbfilter()" },
		{ "trigger": "dbgobottom","contents": "dbgobottom()" },
		{ "trigger": "dbgoto",    "contents": "dbgoto(${1:nRecord})" },
		{ "trigger": "dbgotop", "contents": "dbgotop()" },
		{ "trigger": "dbrecall","contents": "dbrecall()" },
		{ "trigger": "dbrlock", "contents": "dbrlock(${1:[nRecord]})" },
		{ "trigger": "dbrlocklist","contents": "dbrlocklist()" },
		{ "trigger": "dbrunlock","contents": "dbrunlock()" },
		{ "trigger": "dbseek",   "contents": "dbseek( ${1:expKey}, ${2:[lSoftSeek]}, ${3:[lFindLast]} )" },
		{ "trigger": "dbselectarea", "contents": "dbselectarea(${1:[xArea]})" },
		{ "trigger": "dbsetdriver", "contents": "dbsetdriver(${1:[cDriver]})" },
		{ "trigger": "dbsetfilter", "contents": "dbsetfilter( ${1:bCondition}, ${2:[cCondition]} )" },
		{ "trigger": "dbskip",    "contents": "dbskip(${1:nRecords})" },
		{ "trigger": "dbstruct",  "contents": "dbstruct()" },
		{ "trigger": "dbunlock",  "contents": "dbunlock()" },
		{ "trigger": "dbunlockall","contents": "dbunlockall()" },
		{ "trigger": "dbusearea",  "contents": "dbusearea( ${1:[lNewArea]}, ${2:[cDriver]}, ${3:cName}, ${4:[xAlias]}, ${5:[lShared]}, ${6:[lReadonly]} )" },
		{ "trigger": "deleted",  "contents": "deleted()" },
		{ "trigger": "descend",  "contents": "descend(${1:xExp})" },
		{ "trigger": "dirchange", "contents": "dirchange(${1:cDirectory})" },
		{ "trigger": "diskspace", "contents": "diskspace(${1:nDrive})" },
		{ "trigger": "do",        "contents": "do( ${1:xFuncProc}, ${2:[xArguments]} )" },
		{ "trigger": "dow",       "contents": "dow(${1:dDate})" },
		{ "trigger": "dtoc",      "contents": "dtoc(${1:dDate})" },
		{ "trigger": "dtos",      "contents": "dtos(${1:dDate})" },
/* E */ 
		{ "trigger": "elaptime",  "contents": "elaptime( ${1:cStartTime}, ${2:cEndTime} )" },
		{ "trigger": "empty",     "contents": "empty(${1:xExpr})" },
		{ "trigger": "eof",       "contents": "eof()" },
		{ "trigger": "errorsys",  "contents": "errorsys()" },
		{ "trigger": "empty",     "contents": "empty(${1:xExpr})" },
		{ "trigger": "eval",      "contents": "eval( ${1:bBlock}, ${2:[xVal]} )" },
		{ "trigger": "exp",       "contents": "exp(${1:nNumber})" },
/* F */
		{ "trigger": "fclose",    "contents": "fclose(${1:nHandle})" },
		{ "trigger": "fcount",    "contents": "fcount()" },
		{ "trigger": "fcreate",   "contents": "fcreate( ${1:cFile}, ${2:[nAttribute]} )" },
		{ "trigger": "ferase",    "contents": "ferase(${1:cFile})" },
		{ "trigger": "ferror",    "contents": "ferror()" },
		{ "trigger": "fieldblock","contents": "fieldblock(${1:cFieldName})" },
		{ "trigger": "fieldget",  "contents": "fieldget(${1:nField})" },
		{ "trigger": "fieldname", "contents": "fieldname(${1:nPosition})" },
		{ "trigger": "fieldpos",  "contents": "fieldpos(${1:cFieldName})" },
		{ "trigger": "fieldput",  "contents": "fieldput( ${1:nField}, ${2:expAssign} )" },
		{ "trigger": "fieldwblock", "contents": "fieldwblock( ${1:cFieldName}, ${2:nWorkArea} )" },
		{ "trigger": "file",      "contents": "file(${1:cFile})" },
		{ "trigger": "flock",     "contents": "flock()" },
		{ "trigger": "fopen",     "contents": "fopen( ${1:cFile}, ${2:[nMode]} )" },
		{ "trigger": "found",     "contents": "found()" },
		{ "trigger": "fread",     "contents": "fread( ${1:nHandle}, @${2:cBuffer}, ${3:nBytes} )" },
		{ "trigger": "freadstr",  "contents": "freadstr( ${1:nHandle}, ${2:nBytes} )" },
		{ "trigger": "frename",   "contents": "frename( ${1:cOldFile}, ${2:cNewFile} )" },
		{ "trigger": "fseek",     "contents": "fseek( ${1:nHandle}, ${2:nOffset}, ${3:[nOrigin]} )" },
		{ "trigger": "fwrite",    "contents": "fwrite( ${1:nHandle}, ${2:cBuffer}, ${3:[nBytes]} )" },
/* G */
		{ "trigger": "getenv",    "contents": "getenv( ${1:cEnviroment}, ${2:cDefaultValue} )" },
/* H */
/* I */
		{ "trigger": "i2bin", 		"contents": "i2bin(${1:number})" },
		{ "trigger": "if", 			"contents": "if(${1:lCondition}, ${2:exprTrue}, ${3:exprFalse})" },
		{ "trigger": "iif", 		"contents": "iif(${1:lCondition}, ${2:exprTrue}, ${3:exprFalse})" },
		{ "trigger": "indexext",	"contents": "indexext()" },
		{ "trigger": "indexord", 	"contents": "indexord()" },
		{ "trigger": "indexkey",	"contents": "indexkey(${1:nOrder})" },
		{ "trigger": "inkey",		"contents": "inkey(${1:nWaitSeconds}, ${2:nEventMask})" },
		{ "trigger": "int",			"contents": "int(${1:nNumber})" },
		{ "trigger": "invertattr", 	"contents": "invertattr(${1:xColor})" },
		{ "trigger": "invertwin", 	"contents": "invertwin(${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight})" },
		{ "trigger": "isaffirm", 	"contents": "isaffirm(${1:cChar})" },
		{ "trigger": "isalnum", 	"contents": "isalnum(${1:cString})" },
		{ "trigger": "isalpha", 	"contents": "isalpha(${1:cString})" },
		{ "trigger": "iscntrl", 	"contents": "iscntrl(${1:cString})" },
		{ "trigger": "iscolor", 	"contents": "iscolor()" },
		{ "trigger": "isdefcolor", 	"contents": "isdefcolor()" },
		{ "trigger": "isdigit", 	"contents": "isdigit(${1:cString})" },
		{ "trigger": "isdir", 		"contents": "isdir(${1:cDirSpec})" },
		{ "trigger": "isdirectory", "contents": "isdirectory(${1:cDirName})" },
		{ "trigger": "isdisk", 		"contents": "isdisk(${1:cDrive})" },
		{ "trigger": "isgraph", 	"contents": "isgraph(${1:cString})" },
		{ "trigger": "islower",		"contents": "islower(${1:cString})" },
		{ "trigger": "isnegative", 	"contents": "isnegative(${1:cChar})" },
		{ "trigger": "isprinter", 	"contents": "isprinter(${1:cPrinterName})" },
		{ "trigger": "isquick", 	"contents": "isquick(${1:cString})" },
		{ "trigger": "isshortcut", 	"contents": "isshortcut(${1:cString})" },
		{ "trigger": "isupper",		"contents": "isupper(${1:cString})" } 

/* J */
/* K */
/* L */
/* M */
/* N */
/* O */
/* P */
/* Q */
/* R */
/* S */
/* T */
/* U */
/* V */
/* W */
/* X */
/* Y */
/* Z */
	]
}

